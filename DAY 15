Valid Parentheses
Easy
40/40
Average time to solve is 10m
Contributed by
391 upvotes
Asked in companies
Problem statement
You're given a string 'S' consisting of "{", "}", "(", ")", "[" and "]" .



Return true if the given string 'S' is balanced, else return false.



For example:
'S' = "{}()".

There is always an opening brace before a closing brace i.e. '{' before '}', '(' before ').
So the 'S' is Balanced.
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1 :
[()]{}{[()()]()}
Sample Output 1 :
Balanced
Explanation Of the Sample Input 1 :
There is always an opening brace before a closing brace i.e. '{' before '}', '(' before '), '[' before ']'.
So the 'S' is Balanced.
Sample Input 2 :
[[}[
Sample Output 2 :
Not Balanced
Constraints:
1 <= 'N' <= 10^5

Where 'N' is the length of the input string 'S'.
Time Limit: 1 sec

Solution-
import java.util.*;
public class Solution {

    public static boolean isValidParenthesis(String s) {
       Stack<Character> stack = new Stack<>();
       for(int i = 0;i < s.length();i++)
       {
           if(s.charAt(i) == '{' || s.charAt(i) == '[' || s.charAt(i) == '(' )
           {
               stack.push(s.charAt(i));
           }
           else if (s.charAt(i) == '}'  )
           {
               if(stack.isEmpty() || stack.peek() != '{')
               {
                   return false;
               }
               else{
                   stack.pop();
               }

           }
             else if (s.charAt(i) == ']'  )
           {
               if(stack.isEmpty() || stack.peek() != '[')
               {
                   return false;
               }
               else{
                   stack.pop();
               }

           }
             else if (s.charAt(i) == ')'  )
           {
               if(stack.isEmpty() || stack.peek() != '(')
               {
                   return false;
               }
               else{
                   stack.pop();
               }

           }
       }
       if(stack.isEmpty())
       {
           return true;
       }
       else{
           return false;
       }
    }
}
